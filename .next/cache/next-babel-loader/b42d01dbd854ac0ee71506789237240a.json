{"ast":null,"code":"function slugify(string) {\n  const a = 'àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;';\n  const b = 'aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n  return string.toString().toLowerCase().replace(/\\s+/g, '-') // Replace spaces with -\n  .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n  .replace(/&/g, '-and-') // Replace & with 'and'\n  .replace(/[^\\w-]+/g, '') // Remove all non-word characters\n  .replace(/--+/g, '-') // Replace multiple - with single -\n  .replace(/^-+/, '') // Trim - from start of text\n  .replace(/-+$/, ''); // Trim - from end of text\n}\n\nfunction titleIfy(slug) {\n  var words = slug.split('-');\n\n  for (var i = 0; i < words.length; i++) {\n    var word = words[i];\n    words[i] = word.charAt(0).toUpperCase() + word.slice(1);\n  }\n\n  return words.join(' ');\n}\n\nfunction getTrimmedString(string, length = 8) {\n  if (string.length <= length) {\n    return string;\n  } else {\n    return string.substring(0, length) + '...';\n  }\n}\n\nexport { slugify, titleIfy, getTrimmedString };","map":{"version":3,"sources":["E:/work/vabva/VABVA-Ecommerce/utils/helpers.js"],"names":["slugify","string","a","b","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","titleIfy","slug","words","i","length","word","toUpperCase","slice","getTrimmedString","substring"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AACvB,QAAMC,CAAC,GAAG,2EAAV;AACA,QAAMC,CAAC,GAAG,2EAAV;AACA,QAAMC,CAAC,GAAG,IAAIC,MAAJ,CAAWH,CAAC,CAACI,KAAF,CAAQ,EAAR,EAAYC,IAAZ,CAAiB,GAAjB,CAAX,EAAkC,GAAlC,CAAV;AAEA,SAAON,MAAM,CAACO,QAAP,GAAkBC,WAAlB,GACJC,OADI,CACI,MADJ,EACY,GADZ,EACiB;AADjB,GAEJA,OAFI,CAEIN,CAFJ,EAEOO,CAAC,IAAIR,CAAC,CAACS,MAAF,CAASV,CAAC,CAACW,OAAF,CAAUF,CAAV,CAAT,CAFZ,EAEoC;AAFpC,GAGJD,OAHI,CAGI,IAHJ,EAGU,OAHV,EAGmB;AAHnB,GAIJA,OAJI,CAII,UAJJ,EAIgB,EAJhB,EAIoB;AAJpB,GAKJA,OALI,CAKI,MALJ,EAKY,GALZ,EAKiB;AALjB,GAMJA,OANI,CAMI,KANJ,EAMW,EANX,EAMe;AANf,GAOJA,OAPI,CAOI,KAPJ,EAOW,EAPX,CAAP,CALuB,CAYD;AACvB;;AAED,SAASI,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,MAAIC,KAAK,GAAGD,IAAI,CAACT,KAAL,CAAW,GAAX,CAAZ;;AACA,OAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIE,IAAI,GAAGH,KAAK,CAACC,CAAD,CAAhB;AACAD,IAAAA,KAAK,CAACC,CAAD,CAAL,GAAWE,IAAI,CAACP,MAAL,CAAY,CAAZ,EAAeQ,WAAf,KAA+BD,IAAI,CAACE,KAAL,CAAW,CAAX,CAA1C;AACD;;AACD,SAAOL,KAAK,CAACT,IAAN,CAAW,GAAX,CAAP;AACD;;AAED,SAASe,gBAAT,CAA0BrB,MAA1B,EAAkCiB,MAAM,GAAG,CAA3C,EAA8C;AAC5C,MAAIjB,MAAM,CAACiB,MAAP,IAAiBA,MAArB,EAA6B;AAC3B,WAAOjB,MAAP;AACD,GAFD,MAEO;AACL,WAAOA,MAAM,CAACsB,SAAP,CAAiB,CAAjB,EAAoBL,MAApB,IAA8B,KAArC;AACD;AACF;;AAED,SACElB,OADF,EACWc,QADX,EACqBQ,gBADrB","sourcesContent":["function slugify(string) {\n  const a = 'àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;'\n  const b = 'aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------'\n  const p = new RegExp(a.split('').join('|'), 'g')\n\n  return string.toString().toLowerCase()\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, '-and-') // Replace & with 'and'\n    .replace(/[^\\w-]+/g, '') // Remove all non-word characters\n    .replace(/--+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, '') // Trim - from end of text\n}\n\nfunction titleIfy(slug) {\n  var words = slug.split('-')\n  for (var i = 0; i < words.length; i++) {\n    var word = words[i]\n    words[i] = word.charAt(0).toUpperCase() + word.slice(1)\n  }\n  return words.join(' ')\n}\n\nfunction getTrimmedString(string, length = 8) {\n  if (string.length <= length) {\n    return string\n  } else {\n    return string.substring(0, length) + '...'\n  }\n}\n\nexport {\n  slugify, titleIfy, getTrimmedString\n}"]},"metadata":{},"sourceType":"module"}