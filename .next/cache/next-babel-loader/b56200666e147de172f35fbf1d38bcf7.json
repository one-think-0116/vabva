{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport Head from 'next/head';\nimport { titleIfy, slugify } from '../utils/helpers';\nimport { DisplayMedium } from '../components';\nimport CartLink from '../components/CartLink';\nimport { fetchInventory } from '../utils/inventoryProvider';\n\nfunction Categories({\n  categories = []\n}) {\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"w-full\",\n      children: [/*#__PURE__*/_jsx(CartLink, {}), /*#__PURE__*/_jsxs(Head, {\n        children: [/*#__PURE__*/_jsx(\"title\", {\n          children: \"Jamstack ECommerce - All Categories\"\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          name: \"description\",\n          content: `Jamstack ECommerce - All categories`\n        }), /*#__PURE__*/_jsx(\"meta\", {\n          property: \"og:title\",\n          content: \"Jamstack ECommerce - All Categories\"\n        }, \"title\")]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \" pt-4 sm:pt-10 pb-8 \",\n        children: /*#__PURE__*/_jsx(\"h1\", {\n          className: \"text-5xl font-light\",\n          children: \"All categories\"\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"flex flex-col items-center\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"grid gap-4 lg:grid-cols-3 md:grid-cols-2 grid-cols-1\",\n          children: categories.map((category, index) => /*#__PURE__*/_jsx(DisplayMedium, {\n            imageSrc: category.image,\n            subtitle: `${category.itemCount} items`,\n            title: titleIfy(category.name),\n            link: `/category/${slugify(category.name)}`\n          }, index))\n        })\n      })]\n    })\n  });\n}\n\nexport async function getStaticProps() {\n  const inventory = await fetchInventory();\n  const inventoryCategories = inventory.reduce((acc, next) => {\n    const categories = next.categories;\n    categories.forEach(c => {\n      const index = acc.findIndex(item => item.name === c);\n\n      if (index !== -1) {\n        const item = acc[index];\n        item.itemCount = item.itemCount + 1;\n        acc[index] = item;\n      } else {\n        const item = {\n          name: c,\n          image: next.image,\n          itemCount: 1\n        };\n        acc.push(item);\n      }\n    });\n    return acc;\n  }, []);\n  return {\n    props: {\n      categories: inventoryCategories\n    }\n  };\n}\nexport default Categories;","map":null,"metadata":{},"sourceType":"module"}