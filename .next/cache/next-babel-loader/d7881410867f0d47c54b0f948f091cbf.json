{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport Head from 'next/head';\nimport { SiteContext, ContextProviderComponent } from \"../context/mainContext\";\nimport DENOMINATION from \"../utils/currencyProvider\";\nimport { FaLongArrowAltLeft } from \"react-icons/fa\";\nimport Link from \"next/link\";\nimport Image from \"../components/Image\";\nimport { v4 as uuid } from \"uuid\";\nimport { CardElement, Elements, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\"; // Make sure to call `loadStripe` outside of a componentâ€™s render to avoid\n// recreating the `Stripe` object on every render.\n\nconst stripePromise = loadStripe(\"xxx-xxx-xxx\");\n\nfunction CheckoutWithContext(props) {\n  return /*#__PURE__*/_jsx(ContextProviderComponent, {\n    children: /*#__PURE__*/_jsx(SiteContext.Consumer, {\n      children: context => /*#__PURE__*/_jsx(Elements, {\n        stripe: stripePromise,\n        children: /*#__PURE__*/_jsx(Checkout, _objectSpread(_objectSpread({}, props), {}, {\n          context: context\n        }))\n      })\n    })\n  });\n}\n\nconst calculateShipping = () => {\n  return 0;\n};\n\nconst Input = ({\n  onChange,\n  value,\n  name,\n  placeholder\n}) => /*#__PURE__*/_jsx(\"input\", {\n  onChange: onChange,\n  value: value,\n  className: \"mt-2 text-sm shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n  type: \"text\",\n  placeholder: placeholder,\n  name: name\n});\n\nconst Checkout = ({\n  context\n}) => {\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState(null);\n  const {\n    0: orderCompleted,\n    1: setOrderCompleted\n  } = useState(false);\n  const {\n    0: input,\n    1: setInput\n  } = useState({\n    name: \"\",\n    email: \"\",\n    street: \"\",\n    city: \"\",\n    postal_code: \"\",\n    state: \"\"\n  });\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const onChange = e => {\n    setErrorMessage(null);\n    setInput(_objectSpread(_objectSpread({}, input), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      street,\n      city,\n      postal_code,\n      state\n    } = input;\n    const {\n      total,\n      clearCart\n    } = context;\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Validate input\n\n\n    if (!street || !city || !postal_code || !state) {\n      setErrorMessage(\"Please fill in the form!\");\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n\n    const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: cardElement,\n      billing_details: {\n        name: name\n      }\n    });\n\n    if (error) {\n      setErrorMessage(error.message);\n      return;\n    }\n\n    const order = {\n      email,\n      amount: total,\n      address: state,\n      // should this be {street, city, postal_code, state} ?\n      payment_method_id: paymentMethod.id,\n      receipt_email: \"customer@example.com\",\n      id: uuid()\n    }; // TODO call API\n\n    setOrderCompleted(true);\n    clearCart();\n  };\n\n  const {\n    numberOfItemsInCart,\n    cart,\n    total\n  } = context;\n  const cartEmpty = numberOfItemsInCart === Number(0);\n\n  if (orderCompleted) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(\"h3\", {\n        children: \"Thanks! Your order has been successfully processed.\"\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"flex flex-col items-center pb-10\",\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Jamstack ECommerce - Checkout\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: `Check out`\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:title\",\n        content: \"Jamstack ECommerce - Checkpit\"\n      }, \"title\")]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \" flex flex-col w-full c_large:w-c_large \",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"pt-10 pb-8\",\n        children: [/*#__PURE__*/_jsx(\"h1\", {\n          className: \"text-5xl font-light mb-6\",\n          children: \"Checkout\"\n        }), /*#__PURE__*/_jsx(Link, {\n          href: \"/cart\",\n          children: /*#__PURE__*/_jsx(\"a\", {\n            \"aria-label\": \"Cart\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"cursor-pointer flex  items-center\",\n              children: [/*#__PURE__*/_jsx(FaLongArrowAltLeft, {\n                className: \"mr-2 text-gray-600\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: \"text-gray-600 text-sm\",\n                children: \"Edit Cart\"\n              })]\n            })\n          })\n        })]\n      }), cartEmpty ? /*#__PURE__*/_jsx(\"h3\", {\n        children: \"No items in cart.\"\n      }) : /*#__PURE__*/_jsxs(\"div\", {\n        className: \"flex flex-col\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"\",\n          children: cart.map((item, index) => {\n            return /*#__PURE__*/_jsx(\"div\", {\n              className: \"border-b py-10\",\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsx(Image, {\n                  className: \"w-32 m-0\",\n                  src: item.image,\n                  alt: item.name\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  className: \"m-0 pl-10 text-gray-600\",\n                  children: item.name\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"flex flex-1 justify-end\",\n                  children: /*#__PURE__*/_jsx(\"p\", {\n                    className: \"m-0 pl-10 text-gray-900 font-semibold\",\n                    children: DENOMINATION + item.price\n                  })\n                })]\n              })\n            }, index);\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"flex flex-1 flex-col md:flex-row\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"flex flex-1 pt-8 flex-col\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"mt-4 border-t pt-10\",\n              children: /*#__PURE__*/_jsxs(\"form\", {\n                onSubmit: handleSubmit,\n                children: [errorMessage ? /*#__PURE__*/_jsx(\"span\", {\n                  children: errorMessage\n                }) : \"\", /*#__PURE__*/_jsx(Input, {\n                  onChange: onChange,\n                  value: input.name,\n                  name: \"name\",\n                  placeholder: \"Cardholder name\"\n                }), /*#__PURE__*/_jsx(CardElement, {\n                  className: \"mt-2 shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                }), /*#__PURE__*/_jsx(Input, {\n                  onChange: onChange,\n                  value: input.email,\n                  name: \"email\",\n                  placeholder: \"Email\"\n                }), /*#__PURE__*/_jsx(Input, {\n                  onChange: onChange,\n                  value: input.street,\n                  name: \"street\",\n                  placeholder: \"Street\"\n                }), /*#__PURE__*/_jsx(Input, {\n                  onChange: onChange,\n                  value: input.city,\n                  name: \"city\",\n                  placeholder: \"City\"\n                }), /*#__PURE__*/_jsx(Input, {\n                  onChange: onChange,\n                  value: input.state,\n                  name: \"state\",\n                  placeholder: \"State\"\n                }), /*#__PURE__*/_jsx(Input, {\n                  onChange: onChange,\n                  value: input.postal_code,\n                  name: \"postal_code\",\n                  placeholder: \"Postal Code\"\n                }), /*#__PURE__*/_jsx(\"button\", {\n                  type: \"submit\",\n                  disabled: !stripe,\n                  onClick: handleSubmit,\n                  className: \"hidden md:block bg-primary hover:bg-black text-white font-bold py-2 px-4 mt-4 rounded focus:outline-none focus:shadow-outline\",\n                  type: \"button\",\n                  children: \"Confirm order\"\n                })]\n              })\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"md:pt-20\",\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: \"pl-4 flex flex-1 pt-2 md:pt-8 mt-2 sm:mt-0\",\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: \"text-sm pr-10 text-left\",\n                children: \"Subtotal\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: \"w-38 flex text-right justify-end\",\n                children: DENOMINATION + total\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"pl-4 flex flex-1 my-2\",\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: \"text-sm pr-10\",\n                children: \"Shipping\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: \"w-38 flex justify-end\",\n                children: \"FREE SHIPPING\"\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"md:ml-4 pl-2 flex flex-1 bg-gray-200 pr-4 pb-1 pt-2 mt-2\",\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                className: \"text-sm pr-10\",\n                children: \"Total\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: \"font-semibold w-38 flex justify-end\",\n                children: DENOMINATION + (total + calculateShipping())\n              })]\n            }), /*#__PURE__*/_jsx(\"button\", {\n              type: \"submit\",\n              disabled: !stripe,\n              onClick: handleSubmit,\n              className: \"md:hidden bg-primary hover:bg-black text-white font-bold py-2 px-4 mt-4 rounded focus:outline-none focus:shadow-outline\",\n              type: \"button\",\n              children: \"Confirm order\"\n            })]\n          })]\n        })]\n      })]\n    })]\n  });\n};\n\nexport default CheckoutWithContext;","map":null,"metadata":{},"sourceType":"module"}