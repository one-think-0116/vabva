{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport inventory from './inventory';\n\nfunction fetchCategories() {\n  return _fetchCategories.apply(this, arguments);\n}\n\nfunction _fetchCategories() {\n  _fetchCategories = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var categories;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            categories = inventory.reduce(function (acc, next) {\n              next.categories.map(function (category) {\n                if (acc.includes(category)) return;\n                acc.push(category);\n              });\n              return acc;\n            }, []);\n            return _context.abrupt(\"return\", Promise.resolve(categories));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchCategories.apply(this, arguments);\n}\n\nexport default fetchCategories;","map":null,"metadata":{},"sourceType":"module"}